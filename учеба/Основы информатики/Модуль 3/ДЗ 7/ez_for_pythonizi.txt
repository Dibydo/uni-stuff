Конспект по Python

1. Типизация и система типов языка

**Общая характеристика**

Python отнотится к языкам с неявной сильной динамической типизацией.
Неявная типизация означает, что при объявлении переменной не нужно указывать ее тип.
Пример:

На языке C:
int var = 0;
На языке Python:
var = 0

Как ранее было сказано в Python динамическая типизация, а это значит, что тип переменной определяется именно при выполнении программы.

Сильная типизация означает, что невозможно производить операции между выражениями с разными типами данных.

**Типы данных в Python**

В Python типы данных можно делятся на встроенные(built-in) и не встроенные, т.е. полученные при импортировании модулей.

Основные встроенные типы данных:

1. None - неопределенное значение
2. Boolean - логические переменные
3. Numeric - числа:
	1. int - целые числа
	2. float - числа с плавающей точкой
	3. complex - комплексные числа
4. Sequence - списки:
	1. list - список
	2. tuple - кортеж
	3. range - диапазон
5. Text Sequence - строки
6. Binary Sequence - бинарные списки:
	1. bytes - байты
	2. bytearray - массивы байт
	3. memoryview - специальные объекты для доступа к внутренним данным объекта через protocol buffer
7. Set - множества:
	1. set - множество
	2. frozenset - неизменяемое множество
8. Mapping - словари

**Изменяемые и неизменяемые типы данных**

Типы данных также делятся на изменяемые и неизменяемые.
К изменяемым (mutable) типам относятся: списки(list), множества(set), словари(dict).
К неизменяемым (immutable) типам относятся: целые числа(int), числа с плавающей точкой(float), комплексные числа(complex), логические
переменные(bool), кортежи(tuple), строки(str) и неизменяемые множества(frozen set).

Неизменяемость типа данных означает, что созданный объект больше не изменяется. Например, если мы объявим переменную temp = 10, то будет создан объект
со значением 10, типа int, и идентифитактором, который можно узнать с помощью id(). Тогда объект с этим id будет иметь значение 10 и изменить его
будет уже нельзя. В случае изменяемых типов данных объект с определенным id можно будет изменить. Например, можно изменить значение элемента списка.
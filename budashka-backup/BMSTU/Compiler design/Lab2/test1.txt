2
     0  *ast.File {
     1  .  Doc: nil
     2  .  Package: test1.go:1:1
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: test1.go:1:9
     5  .  .  Name: "main"
     6  .  .  Obj: nil
     7  .  }
     8  .  Decls: []ast.Decl (len = 1) {
     9  .  .  0: *ast.FuncDecl {
    10  .  .  .  Doc: nil
    11  .  .  .  Recv: nil
    12  .  .  .  Name: *ast.Ident {
    13  .  .  .  .  NamePos: test1.go:3:6
    14  .  .  .  .  Name: "main"
    15  .  .  .  .  Obj: *ast.Object {
    16  .  .  .  .  .  Kind: func
    17  .  .  .  .  .  Name: "main"
    18  .  .  .  .  .  Decl: *(obj @ 9)
    19  .  .  .  .  .  Data: nil
    20  .  .  .  .  .  Type: nil
    21  .  .  .  .  }
    22  .  .  .  }
    23  .  .  .  Type: *ast.FuncType {
    24  .  .  .  .  Func: test1.go:3:1
    25  .  .  .  .  Params: *ast.FieldList {
    26  .  .  .  .  .  Opening: test1.go:3:10
    27  .  .  .  .  .  List: nil
    28  .  .  .  .  .  Closing: test1.go:3:11
    29  .  .  .  .  }
    30  .  .  .  .  Results: nil
    31  .  .  .  }
    32  .  .  .  Body: *ast.BlockStmt {
    33  .  .  .  .  Lbrace: test1.go:3:13
    34  .  .  .  .  List: []ast.Stmt (len = 1) {
    35  .  .  .  .  .  0: *ast.DeclStmt {
    36  .  .  .  .  .  .  Decl: *ast.GenDecl {
    37  .  .  .  .  .  .  .  Doc: nil
    38  .  .  .  .  .  .  .  TokPos: test1.go:4:2
    39  .  .  .  .  .  .  .  Tok: var
    40  .  .  .  .  .  .  .  Lparen: -
    41  .  .  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
    42  .  .  .  .  .  .  .  .  0: *ast.ValueSpec {
    43  .  .  .  .  .  .  .  .  .  Doc: nil
    44  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    45  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
    46  .  .  .  .  .  .  .  .  .  .  .  NamePos: test1.go:4:6
    47  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
    48  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
    49  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
    50  .  .  .  .  .  .  .  .  .  .  .  .  Name: "x"
    51  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 42)
    52  .  .  .  .  .  .  .  .  .  .  .  .  Data: 0
    53  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
    54  .  .  .  .  .  .  .  .  .  .  .  }
    55  .  .  .  .  .  .  .  .  .  .  }
    56  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  Type: nil
    58  .  .  .  .  .  .  .  .  .  Values: []ast.Expr (len = 1) {
    59  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
    60  .  .  .  .  .  .  .  .  .  .  .  ValuePos: test1.go:4:10
    61  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
    62  .  .  .  .  .  .  .  .  .  .  .  Value: "\"Hello World\""
    63  .  .  .  .  .  .  .  .  .  .  }
    64  .  .  .  .  .  .  .  .  .  }
    65  .  .  .  .  .  .  .  .  .  Comment: nil
    66  .  .  .  .  .  .  .  .  }
    67  .  .  .  .  .  .  .  }
    68  .  .  .  .  .  .  .  Rparen: -
    69  .  .  .  .  .  .  }
    70  .  .  .  .  .  }
    71  .  .  .  .  }
    72  .  .  .  .  Rbrace: test1.go:6:1
    73  .  .  .  }
    74  .  .  }
    75  .  }
    76  .  Scope: *ast.Scope {
    77  .  .  Outer: nil
    78  .  .  Objects: map[string]*ast.Object (len = 1) {
    79  .  .  .  "main": *(obj @ 15)
    80  .  .  }
    81  .  }
    82  .  Imports: nil
    83  .  Unresolved: nil
    84  .  Comments: nil
    85  }
